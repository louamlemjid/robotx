#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <WiFiClientSecure.h>
#include <IRremoteESP8266.h>
#include <IRrecv.h>
#include <IRutils.h>

String ssid = "Hexabyte";
String password = "22675660";

// Web server address
String serverName = "https://smartx.serveo.net"; // Replace with the IP address of your server

// IR receiver settings (adjust GPIO pin as needed)
const uint16_t kRecvPin = D1; // The GPIO pin you're using for the IR receiver
IRrecv irrecv(kRecvPin);
decode_results results;

void setup() {
  Serial.begin(115200);
  delay(1000);

  // Connect to WiFi
  Serial.println("Connecting to WiFi...");
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("WiFi connected.");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  // Start the IR receiver
  irrecv.enableIRIn();  // Start the receiver
}

void loop() {
  // Check if an IR signal is received
  if (irrecv.decode(&results)) {
    // Print the received IR signal in hexadecimal format
    // String hexCode = resultToHexidecimal(&results);
    Serial.println("Received IR code: " + resultToHexidecimal(&results));

    // Send the IR code to the server using PATCH request
    sendPatchRequest("louam", resultToHexidecimal(&results)); // Replace with the actual user name

    // Resume IR receiver after processing
    irrecv.resume();
  }

  // Adjust delay as needed
}

void sendPatchRequest(String user, String hexadecimalCode) {
    if (WiFi.status() == WL_CONNECTED) {
        HTTPClient http;
        WiFiClientSecure client;
        client.setInsecure(); // Bypass SSL certificate verification for testing

        // Construct the correct URL
        String serverPath = serverName + "/" + user + "/ac/microcontroller";
        http.begin(client, serverPath);
        http.addHeader("Content-Type", "application/json");

        // Create the JSON payload
        String jsonPayload = "{\"hexadecimalCode\":\"" + hexadecimalCode + "\"}";

        // Send the HTTP PATCH request
        int httpResponseCode = http.PATCH(jsonPayload);

        // Check the response
        if (httpResponseCode > 0) {
            String response = http.getString();
            Serial.println("HTTP Response code: " + String(httpResponseCode));
            Serial.println("Server response: " + response);
        } else {
            Serial.println("Error on sending PATCH request: " + String(httpResponseCode));
        }

        // Free resources
        http.end();
    } else {
        Serial.println("WiFi Disconnected");
    }
}

